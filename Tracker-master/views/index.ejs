<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tracker</title>
    <!-- CSS -->
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html, body {
            width: 100%;
            height: 100%;
        }

        .map {
            width: 100%;
            height: 100%;
        }
    </style>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css" 
          integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body>
    <div class="map" id="map"></div>

    <script src="https://cdn.socket.io/4.8.1/socket.io.min.js" 
            integrity="sha384-mkQ3/7FUtcGyoppY6bz/PORYoGqOl7/aSUMn2ymDOJcapfS6PHqxhRTMh1RR0Q6+" 
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.js" 
            integrity="sha512-puJW3E/qXDqYp9IfhAI54BJEaWIfloJ7JWs7OeD5i6ruC9JZL1gERT1wjtwXFlh7CjE7ZJ+/vcRZRkIYIb6p4g=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        const socket = io();
        const markers = {}; // Store markers for each user

        // Initialize the map
        const map = L.map("map").setView([0, 0], 10);

        // Add OpenStreetMap tiles
        L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
            attribution: "© Anurag GymBoy",
        }).addTo(map);

        // Receive location updates
        socket.on("receive-location", (data) => {
            const { id, latitude, longitude } = data;
            if (markers[id]) {
                // Update existing marker position
                markers[id].setLatLng([latitude, longitude]);
            } else {
                // Add a new marker for this user
                markers[id] = L.marker([latitude, longitude]).addTo(map);
            }
            map.setView([latitude, longitude], 15); // Optional: Adjust zoom to user location
        });

        // Handle user disconnection
        socket.on("user-disconnected", (id) => {
            if (markers[id]) {
                map.removeLayer(markers[id]); // Remove marker of disconnected user
                delete markers[id]; // Remove from the markers object
            }
        });

        // Send current location to the server
        if (navigator.geolocation) {
            navigator.geolocation.watchPosition(
                (position) => {
                    const { latitude, longitude } = position.coords;
                    socket.emit("send-location", { latitude, longitude });

                    // Show user’s own marker on the map
                    if (markers[socket.id]) {
                        markers[socket.id].setLatLng([latitude, longitude]);
                    } else {
                        markers[socket.id] = L.marker([latitude, longitude]).addTo(map);
                    }

                    map.setView([latitude, longitude], 15); // Adjust zoom level for the user
                },
                (error) => {
                    console.error("Geolocation error:", error);
                },
                {
                    enableHighAccuracy: true,
                    timeout: 5000,
                    maximumAge: 0,
                }
            );
        } else {
            console.error("Geolocation is not supported by this browser.");
        }
    </script>
</body>
</html>
